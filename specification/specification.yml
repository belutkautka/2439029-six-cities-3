openapi: 3.1.0
info:
  title: API сервер для проекта «Шесть городов».
  description: API сервер для проекта «Шесть городов».
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  version: 1.0.0
tags:
  - name: offers
    description: Действия с объявлениями.
  - name: facilities
    description: Действия с удобствами.
  - name: comments
    description: Действия с комментариями.
  - name: users
    description: Действия с пользователем.


paths:
  /offer:
    post:
      tags:
        - offers
      summary: Создание нового объявления.
      description: Создает новое объявление.
      requestBody:
        description: Метод создает новое объявление.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createOffer'
        required: true
      responses:
        "201":
          description: Новое объявление создано.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/offer'
        "400":
          description: Невалидные значения для полей.
        "401":
          description: Пользователь не авторизован
    put:
      tags:
        - offers
      summary: Редактирование объявления
      requestBody:
        description: Метод редактирует объявление.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/offer'
        required: true
      responses:
        200:
          description: Объявление успешно отредактировано
        400:
          description: Пользователь может редактировать только свои объявления
        401:
          description: Пользователь не авторизован
      description: Редактирование существующего предложения
  /offer/{offerId}:
    delete:
      tags:
        - offers
      summary: Удаление объявления по аренде
      requestBody:
        description: Метод удаляет объявление.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/byId'
      responses:
        200:
          description: Предложение успешно удалено
        400:
          description: Пользователь может удалять только свои предложения
        401:
          description: Пользователь не авторизован
      description: Удаление существующего объявления

  /offers?countRequests=60:
      get:
        tags:
          - offers
        summary: Список объявлений по аренде
        responses:
          200:
            description: Успешно получен список предложений
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/offerWithoutDetails'

  /offers/{offerId}/details:
    get:
      tags:
        - offers
      summary: Детальная информация по объявлению
      responses:
        200:
          description: Детальная информация по предложению успешно получена
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/offer'

#Комментарии
  /comments/{offerId}?count=50:
    get:
      tags:
        - comments
      summary: Список комментариев для объявления
      responses:
        200:
          description: Список комментариев для объявления успешно получен
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/comment'
    post:
      tags:
        - comments
      summary: Добавление комментария
      requestBody:
        description: Метод отдает комментарии у объявления
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/comment'
      responses:
        201:
          description: Успешное добавление комментария
        400:
          description: Введенные данные не прошли валидацию
        401:
          description: Пользователь не авторизован

#Пользователь
  /users/create:
    post:
      tags:
        - users
      summary: Авторизация пользователя
      description: Авторизует пользователя на основе логина и пароля
      requestBody:
        description: Метод отдает комментарии у объявления
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user'
      responses:
        201:
          description: Успешное создание пользователя
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/userData'
        400:
          description: Введенные данные не прошли валидацию

  /user/login:
    get:
      tags:
        - users
      summary: Вход в закрытую часть приложения
      description: Вход в закрытую часть приложения
      requestBody:
        description: Метод отдает комментарии у объявления
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/userLogin'
      responses:
        201:
          description: Пользователь авторизован
        400:
          description: Данные невалидны
        401:
          description: Пользователь не авторизован

  /user/logout:
    get:
      tags:
        - users
      summary: Выход из закрытой части приложения
      description: Выход из закрытой части приложения
      responses:
        201:
          description: Пользователь успешно вышел
        401:
          description: Пользователь не авторизован
  /user:
    get:
      tags:
        - users
      summary: Проверка состояния пользователя
      description: Проверка состояния пользователя
      responses:
        201:
          description: Пользователь авторизован
        401:
          description: Пользователь не авторизован
  /users/{userId}/avatar:
    post:
      tags:
        - users
      summary: Загрузить изображение аватара
      description: Загружает изображение аватара пользователя. Изображение
        аватара должно быть в формате `png` или `jpg`.
      responses:
        201:
          description: Аватар успешно загружен
        400:
          description: Аватар некорректого формата

components:
  schemas:
    createOffer:
      type: object
      properties:
        name:
          type: string
          example: "Название"
        description:
          type: string
          example: "Описание объявления"
        date:
          type: string
          example: '2024.03.03'
        city:
          type: string
          example: 'Paris'
        previewImg:
          type: string
          example: "preview.jpg"
        images:
          type: array
          items:
              type: string
          example: [ "apartment1.jpg","apartment2.jpg" ]
        isPremium:
          type: boolean
        isFavourites:
          type: boolean
        rating:
          type: number
          example: 3.5
        typeHousing:
          type: string
          example: 'House'
        countRooms:
          type: number
          example: 3
        countPeople:
          type: number
          example: 3
        price:
          type: number
          example: 666
        facilities:
          type: array
          items:
            type: string
          example: ['Breakfast']
        author:
          type: string
          example: "Анастасия Белоусова"
        countComments:
          type: number
          example: 1
        coordinates:
          type: string
          example: 48.85661/2.351499

    offer:
      type: object
      properties:
        id:
          type: string
          example: "6329c3d6a04ab1061c6425ea"
        name:
          type: string
          example: "Название"
        description:
          type: string
          example: "Описание"
        date:
          type: string
          example: '2024.03.03'
        city:
          type: string
          example: 'Paris'
        previewImg:
          type: string
          example: "preview.jpg"
        images:
          type: array
          items:
            type: string
          example: [ "apartment1.jpg","apartment2.jpg" ]
        isPremium:
          type: boolean
        isFavourites:
          type: boolean
        rating:
          type: number
          example: 3.5
        typeHousing:
          type: string
          example: 'House'
        countRooms:
          type: number
          example: 3
        countPeople:
          type: number
          example: 3
        price:
          type: number
          example: 666
        facilities:
          type: array
          items:
            type: string
          example: [ 'Breakfast' ]
        author:
          type: string
          example: "Анастасия Белоусова"
        countComments:
          type: number
          example: 1
        coordinates:
          type: string
          example: 48.85661/2.351499

    byId:
      type: object
      properties:
        id:
          type: string
          example: "6329c3d6a04ab1061c6425ea"

    offerWithoutDetails:
      type: object
      properties:
        id:
          type: string
          example: "6329c3d6a04ab1061c6425ea"
        price:
          type: number
          example: 666
        name:
          type: string
          example: "Название"
        typeHousing:
          type: string
          example: 'House'
        isFavourites:
          type: boolean
        date:
          type: string
          example: '2024.03.03'
        city:
          type: string
          example: 'Paris'
        previewImg:
          type: string
          example: "preview.jpg"
        isPremium:
          type: boolean
        rating:
          type: number
          example: 3.5
        countComments:
          type: number
          example: 1

    comment:
      type: object
      properties:
        id:
          type: string
          example: "6329c3d6a04ab1061c6425ea"
        offerId:
          type: string
          example: "6329c3d6a04ab1061c6425ea"
        text:
          type: string
          example: "мяу"
        createdAt:
          type: string
          example: '2024.03.03'
        rating:
          type: number
          example: 3.5
        authorId:
          type: string
          example: "6329c3d6a04ab1061c6425ea"

    user:
      name:
        type: string
        example: "Анастасия Белоусова"
      email:
        type: string
        example: "Анастасия Белоусова"
      password:
        type: string
        example: "abacaba"
    userData:
      id:
        type: string
        example: "6329c3d6a04ab1061c6425ea"
      name:
        type: string
        example: "Анастасия Белоусова"
      email:
        type: string
        example: "Анастасия Белоусова"
    userLogin:
      email:
        type: string
        example: "Анастасия Белоусова"
      password:
        type: string
        example: "abacaba"
